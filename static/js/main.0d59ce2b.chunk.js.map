{"version":3,"sources":["components/InfoBox/InfoBox.js","lib/Service.js","components/LineGraph/LineGraph.js","utils/util.js","components/Map/Map.js","lib/countryName.js","components/Table/Table.js","components/Search/Search.js","components/App.js","serviceWorker.js","i18n/en.js","i18n/zh.js","index.js"],"names":["activeClass","index","InfoBox","title","cases","total","isRed","active","props","Card","onClick","className","CardContent","Typography","color","id","fetchRequest","url","method","params","Promise","resolve","reject","fetchInitData","body","JSON","stringify","fetch","then","response","json","responseData","catch","err","buildChartData","data","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","themeType","useState","setData","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","ticks","fontColor","yAxes","gridLines","callback","values","useEffect","a","fetchData","length","datasets","backgroundColor","borderColor","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","sort","b","prettyPrintStat","stat","toThousands","num","toString","result","slice","MapJS","countries","center","zoom","Map","TileLayer","attribution","map","country","Circle","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","coutryName","headCells","numeric","disablePadding","descendingComparator","orderBy","TableJS","order","onRequestSort","TableContainer","component","Paper","height","Table","stickyHeader","size","aria-label","TableHead","TableRow","headCell","TableCell","key","align","padding","sortDirection","width","TableSortLabel","direction","property","event","TableBody","array","comparator","stabilizedThis","el","stableSort","getComparator","hover","src","marginLeft","Search","searchRef","useRef","Input","placeholder","inputRef","Button","variant","startIcon","current","App","setLocale","lang","setThemeType","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","setCasesType","mapCountries","setMapCountries","reRenderMap","setReRenderMap","setOrder","React","setOrderBy","theme","createMuiTheme","palette","coutriesNameLang","name","iso2","sortedData","getCountriesData","onCounrtyChange","countryCode","target","console","log","str","SwitchCus","withStyles","switchBase","checked","track","Switch","root","margin","spacing","transform","common","white","opacity","border","thumb","borderRadius","grey","transition","transitions","create","focusVisible","classes","focusVisibleClassName","disableRipple","ThemeProvider","FormControlLabel","control","onChange","random","RadioGroup","row","Radio","Box","FormControl","Select","MenuItem","e","todayCases","todayRecovered","todayDeaths","flex","paddingRight","alignItems","forEach","item","toLowerCase","includes","startSearch","paddingLeft","charAt","toUpperCase","Boolean","window","location","hostname","match","en","WebTitle","Worldwide","Overview","Cases","IncreaseToday","Recovered","Deaths","Total","WorldTrend","Country","AllCountry","DarkMode","DarkModeClose","zh_TW","Root","messages","navigator","language","locale","zh","defaultLocale","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"keAMMA,EAAc,SAACC,GACjB,OAAiB,IAAVA,EAAY,eAAyB,IAAVA,EAAY,iBAAiB,kBAuBpDC,MApBf,YAAyE,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAAcC,GAAiC,EAAxCC,MAAwC,EAAjCD,OAAOE,EAA0B,EAA1BA,OAAQN,EAAkB,EAAlBA,MAAUO,EAAQ,kEACpE,OACI,kBAACC,EAAA,EAAD,CAAMC,QAASF,EAAME,QAASC,UAAS,4CACrBJ,GAAUP,EAAYC,KAEpC,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBACbX,GAEL,wBAAIQ,UAAS,yBAA8B,IAAVV,EAAA,MAAgC,IAAVA,EAAA,QAAwB,OAC1EI,GAEL,kBAACQ,EAAA,EAAD,CAAYF,UAAU,iBAAiBG,MAAM,iBAA7C,IACMV,EADN,IACa,kBAAC,IAAD,CAAkBW,GAAG,sB,0BCtBrCC,EAAe,SAACC,EAAKC,GAA2C,IAAnCC,EAAkC,uDAAzB,GAC/C,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClC,IAAIC,EAAgB,CAChBL,OAAQA,GAEG,KAAXC,IACAI,EAAcC,KAAOC,KAAKC,UAAUP,IAExCQ,MAAMV,EAAKM,GACNK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACHV,EAAQU,MAEXC,OAAM,SAACC,GACJX,EAAOW,UCVjBC,EAAiB,SAACC,EAAMC,GAC1B,IACIC,EADAC,EAAY,GAEhB,IAAK,IAAIC,KAAQJ,EAAK/B,MAAO,CACzB,GAAIiC,EAAe,CACf,IAAIG,EAAe,CACfC,EAAGF,EACHG,EAAGP,EAAKC,GAAWG,GAAQF,GAE/BC,EAAUK,KAAKH,GAEnBH,EAAgBF,EAAKC,GAAWG,GAEpC,OAAOD,GAuFIM,MApFf,YAAgE,IAA5CC,EAA2C,EAA3CA,UAA2C,IAAhCT,iBAAgC,MAApB,QAAoB,EAAR5B,EAAQ,2CACnCsC,mBAAS,IAD0B,mBACpDX,EADoD,KAC9CY,EAD8C,KAErDC,EAAU,CACZC,OAAQ,CACJC,SAAS,GAEbC,SAAU,CACNC,MAAO,CACHC,OAAQ,IAIhBC,qBAAqB,EACrBC,SAAU,CACNC,KAAM,QACNC,WAAW,EACXC,UAAW,CACPC,MAAO,SAAUC,EAAazB,GAC1B,OAAO0B,IAAQD,EAAYE,OAAOC,OAAO,WAIrDC,OAAQ,CACJC,MAAO,CACH,CACIC,KAAM,OACNC,KAAM,CACFJ,OAAQ,WACRK,cAAe,MAEnBC,MAAO,CACHC,UAAyB,SAAdzB,EAAuB,OAAS,UAIvD0B,MAAO,CACH,CACIC,UAAW,CACPtB,SAAS,GAEbmB,MAAO,CACHC,UAAyB,SAAdzB,EAAuB,OAAS,OAE3C4B,SAAU,SAAUX,EAAO7D,EAAOyE,GAC9B,OAAOb,IAAQC,GAAOC,OAAO,YAoBrD,OAZAY,qBAAU,YACS,uCAAG,sBAAAC,EAAA,sEACR5D,EAAa,8DACdY,MAAK,SAACO,GACH,IAAIG,EAAYJ,EAAeC,EAAMC,GACrCW,EAAQT,MAJF,2CAAH,qDAQfuC,KACD,CAACzC,IAGA,yBAAKzB,UAAWH,EAAMG,YACb,OAAJwB,QAAI,IAAJA,OAAA,EAAAA,EAAM2C,QAAS,GACZ,kBAAC,OAAD,CACI9B,QAASA,EACTb,KAAM,CACF4C,SAAU,CACN,CACIC,gBAA+B,UAAd5C,EAAsB,wBAAoC,cAAZA,EAAwB,yBAAyB,oBAChH6C,YAA2B,UAAd7C,EAAsB,mBAA+B,cAAZA,EAAwB,oBAAoB,eAClGD,KAAMA,S,6CC3FhC+C,EAAkB,CACpB9E,MAAO,CACH+E,IAAK,UACLC,IAAK,mBACLC,QAAS,yBACTC,WAAY,KAEhBC,UAAW,CACPJ,IAAK,UACLC,IAAK,oBACLC,QAAS,0BACTC,WAAY,MAEhBE,OAAQ,CACJL,IAAK,UACLC,IAAK,mBACLC,QAAS,yBACTC,WAAY,MAIPG,EAAW,SAACtD,GAErB,OADgB,YAAOA,GACLuD,MAAK,SAACd,EAAGe,GAAJ,OAAWf,EAAExE,MAAQuF,EAAEvF,OAAS,EAAI,MAmClDwF,EAAkB,SAACC,GAAD,OAAUA,EAAI,UAAMhC,IAAQgC,GAAM9B,OAAO,SAAY,MAEvE+B,EAAc,SAAAC,GACnBA,GAAOA,GAAO,GAAGC,WACrB,IADA,IAAiCC,EAAS,GACnCF,EAAIjB,OAAS,GAChBmB,EAAS,IAAMF,EAAIG,OAAO,GAAKD,EAC/BF,EAAMA,EAAIG,MAAM,EAAGH,EAAIjB,OAAS,GAKpC,OAHIiB,IACAE,EAASF,EAAME,GAEZA,G,OCrDIE,MAff,YAAiE,IAAjDtD,EAAgD,EAAhDA,UAAWuD,EAAqC,EAArCA,UAAWhE,EAA0B,EAA1BA,UAAWiE,EAAe,EAAfA,OAAQC,EAAO,EAAPA,KACrD,OACI,yBAAK3F,UAAU,OACX,kBAAC4F,EAAA,EAAD,CAAKF,OAAQA,EAAQC,KAAMA,GACvB,kBAACE,EAAA,EAAD,CACAvF,IAAmB,SAAd4B,EAAsB,8EAA8E,qDACzG4D,YAAY,2EDmBC,SAACtE,GAAD,IAAOC,EAAP,uDAAmB,QAAnB,OACzBD,EAAKuE,KAAI,SAACC,GAAD,OACL,kBAACC,EAAA,EAAD,CACIP,OAAQ,CAACM,EAAQE,YAAYC,IAAKH,EAAQE,YAAYE,MACtDjG,MAAOoE,EAAgB9C,GAAW+C,IAClC6B,UAAW9B,EAAgB9C,GAAW+C,IACtC8B,YAAa,GACb5D,OACI6D,KAAKC,KAAKR,EAAQvE,IAAc8C,EAAgB9C,GAAWkD,YAG/D,kBAAC8B,EAAA,EAAD,KACI,yBAAKzG,UAAU,kBACX,yBACIA,UAAU,YACV0G,MAAO,CAACC,gBAAgB,OAAD,OAASX,EAAQE,YAAYU,KAA7B,QAE3B,yBAAK5G,UAAU,aAAagG,EAAQA,SACpC,yBAAKhG,UAAU,kBAAf,UACYkD,IAAQ8C,EAAQvG,OAAO2D,OAAO,QAE1C,yBAAKpD,UAAU,kBAAf,cACgBkD,IAAQ8C,EAAQpB,WAAWxB,OAAO,QAElD,yBAAKpD,UAAU,eAAf,WACakD,IAAQ8C,EAAQnB,QAAQzB,OAAO,cCzC/CyD,CAAcpB,EAAWhE,M,+DCd7BqF,EAAa,CACtB,YAAe,qBACf,gBAAiB,2BACjB,QAAW,iCACX,QAAW,iCACX,iBAAkB,iCAClB,QAAW,qBACX,OAAU,qBACV,SAAY,qBACZ,sBAAuB,6CACvB,UAAa,qBACb,QAAW,2BACX,MAAS,qBACT,UAAa,2BACb,QAAW,qBACX,WAAc,2BACd,WAAc,qBACd,QAAW,eACX,QAAW,qBACX,SAAY,qBACZ,QAAW,2BACX,QAAW,qBACX,OAAU,qBACV,MAAS,eACT,QAAW,qBACX,OAAU,eACV,QAAW,2BACX,yBAA0B,+DAC1B,SAAY,qBACZ,gBAAiB,qBACjB,OAAU,eACV,OAAU,eACV,SAAY,2BACZ,eAAgB,iCAChB,QAAW,qBACX,SAAY,qBACZ,SAAY,qBACZ,OAAU,qBACV,aAAc,qBACd,2BAA4B,eAC5B,KAAQ,eACR,MAAS,eACT,oBAAqB,qBACrB,0BAA2B,yDAC3B,SAAY,2BACZ,QAAW,eACX,yBAA0B,iCAC1B,MAAS,eACT,eAAgB,2BAChB,aAAc,iCACd,qBAAiB,2BACjB,MAAS,eACT,QAAW,iCACX,KAAQ,eACR,MAAS,eACT,OAAU,2BACV,QAAW,eACX,SAAY,qBACZ,SAAY,2BACZ,aAAc,qBACd,QAAW,qBACX,MAAS,eACT,oBAAqB,iCACrB,QAAW,2BACX,QAAW,2BACX,SAAY,2BACZ,gBAAiB,2BACjB,KAAQ,eACR,QAAW,eACX,OAAU,eACV,sBAAuB,iCACvB,gBAAiB,iCACjB,mBAAoB,6CACpB,MAAS,eACT,OAAU,qBACV,QAAW,qBACX,QAAW,eACX,MAAS,eACT,UAAa,2BACb,OAAU,eACV,QAAW,2BACX,WAAc,iCACd,KAAQ,eACR,UAAa,2BACb,SAAY,qBACZ,gBAAiB,iCACjB,OAAU,qBACV,OAAU,qBACV,YAAa,wCACb,MAAS,eACT,SAAY,2BACZ,QAAW,qBACX,QAAW,eACX,MAAS,eACT,UAAa,iCACb,KAAQ,eACR,KAAQ,qBACR,QAAW,qBACX,cAAe,qBACf,OAAU,qBACV,MAAS,qBACT,QAAW,qBACX,MAAS,eACT,OAAU,qBACV,OAAU,eACV,WAAc,qBACd,MAAS,eACT,SAAY,2BACZ,gBAAiB,eACjB,gBAAiB,eACjB,OAAU,qBACV,WAAc,uCACd,KAAQ,eACR,OAAU,2BACV,QAAW,qBACX,QAAW,qBACX,QAAW,2BACX,MAAS,qBACT,cAAiB,iCACjB,UAAa,qBACb,WAAc,qBACd,MAAS,uCACT,UAAa,qBACb,OAAU,qBACV,SAAY,2BACZ,WAAc,iCACd,SAAY,2BACZ,KAAQ,eACR,MAAS,qBACT,mBAAoB,iCACpB,WAAc,iCACd,WAAc,iCACd,UAAa,2BACb,QAAW,qBACX,OAAU,qBACV,WAAc,uCACd,QAAW,2BACX,OAAU,qBACV,SAAY,eACZ,WAAc,eACd,WAAc,iCACd,QAAW,qBACX,WAAc,2BACd,QAAW,eACX,QAAW,2BACX,MAAS,eACT,MAAS,qBACT,YAAe,eACf,gBAAiB,uCACjB,cAAe,qBACf,UAAa,2BACb,MAAS,eACT,QAAW,2BACX,KAAQ,eACR,iBAAkB,2BAClB,OAAU,eACV,KAAQ,eACR,SAAY,2BACZ,MAAS,eACT,UAAa,2BACb,OAAU,qBACV,mBAAoB,6CACpB,SAAY,qBACZ,KAAQ,eACR,YAAe,qBACf,mBAAoB,uCACpB,OAAU,eACV,SAAY,qBACZ,cAAe,2BACf,MAAS,eACT,QAAW,2BACX,QAAW,2BACX,OAAU,qBACV,OAAU,qBACV,eAAgB,2BAChB,oBAAqB,+DACrB,cAAe,2BACf,mCAAoC,mDACpC,cAAe,2BACf,MAAS,qBACT,aAAc,2BACd,wBAAyB,mDACzB,eAAgB,uCAChB,QAAW,2BACX,WAAc,qBACd,eAAgB,qBAChB,UAAa,qBACb,OAAU,2BACV,SAAY,2BACZ,SAAY,iCACZ,kBAAmB,iCACnB,QAAW,2BACX,eAAgB,eAChB,MAAS,qBACT,YAAa,2BACb,MAAS,eACT,SAAY,qBACZ,UAAa,2BACb,OAAU,eACV,YAAe,eACf,MAAS,qBACT,WAAc,qBACd,SAAY,2BACZ,OAAU,eACV,SAAY,eACZ,sBAAuB,6CACvB,cAAe,qBACf,KAAQ,eACR,QAAW,qBACX,MAAS,eACT,QAAW,2BACX,OAAU,qBACV,aAAgB,qBAChB,OAAU,qBACV,OAAU,qBACV,QAAW,qBACX,uBAAwB,mDACxB,GAAM,eACN,IAAO,eACP,QAAW,qBACX,WAAc,2BACd,QAAW,qBACX,eAAgB,qBAChB,UAAa,2BACb,QAAW,eACX,oBAAqB,qEACrB,iBAAkB,2BAClB,MAAS,eACT,WAAc,2BACd,OAAU,qBACV,SAAY,qBACZ,OAAU,+DACV,yBAA0B,uCAC1B,aAAc,qBACd,MAAS,gB,SC1NPC,G,OAAY,CACd,CAAC3G,GAAI,UAAW4G,SAAS,EAAOC,gBAAgB,EAAMjE,MAAO,kBAAC,IAAD,CAAkB5C,GAAG,aAClF,CAACA,GAAI,QAAS4G,SAAS,EAAMC,gBAAgB,EAAOjE,MAAO,kBAAC,IAAD,CAAkB5C,GAAG,WAChF,CAACA,GAAI,YAAa4G,SAAS,EAAMC,gBAAgB,EAAOjE,MAAO,kBAAC,IAAD,CAAkB5C,GAAG,eACpF,CAACA,GAAI,SAAU4G,SAAS,EAAMC,gBAAgB,EAAOjE,MAAO,kBAAC,IAAD,CAAkB5C,GAAG,cAGrF,SAAS8G,EAAqBjD,EAAGe,EAAGmC,GAChC,OAAInC,EAAEmC,GAAWlD,EAAEkD,IACP,EAERnC,EAAEmC,GAAWlD,EAAEkD,GACR,EAEJ,EA4FIC,OA9Df,YAAwE,IAAtD3B,EAAqD,EAArDA,UAAqB4B,GAAgC,EAA1CvC,SAA0C,EAAhCuC,OAAOC,EAAyB,EAAzBA,cAAeH,EAAU,EAAVA,QAMzD,OACI,kBAACI,EAAA,EAAD,CAAgBC,UAAWC,IAAOf,MAAO,CAACgB,OAAQ,UAC9C,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,KAAK,QAAQC,aAAW,iBACxC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKjB,EAAUhB,KAAI,SAACkC,GAAD,OACX,kBAACC,EAAA,EAAD,CACIC,IAAKF,EAAS7H,GACdgI,MAAOH,EAASjB,QAAU,QAAU,SACpCqB,QAASJ,EAAShB,eAAiB,OAAS,UAC5CqB,cAAenB,IAAYc,EAAS7H,IAAKiH,EACzCX,MAAO,CAAC6B,MAAqB,YAAdN,EAAS7H,GAAe,QAAQ,UAE/C,kBAACoI,EAAA,EAAD,CACI5I,OAAQuH,IAAYc,EAAS7H,GAC7BqI,UAAWtB,IAAYc,EAAS7H,GAAKiH,EAAQ,MAE7CtH,SArBL2I,EAqBgCT,EAAS7H,GArB5B,SAACuI,GACrCrB,EAAcqB,EAAOD,MAsBQT,EAASjF,QAvBhB,IAAC0F,OA6Bf,kBAACE,EAAA,EAAD,KApDhB,SAAoBC,EAAOC,GACvB,IAAMC,EAAiBF,EAAM9C,KAAI,SAACiD,EAAI1J,GAAL,MAAe,CAAC0J,EAAI1J,MAMrD,OALAyJ,EAAehE,MAAK,SAACd,EAAGe,GACpB,IAAMqC,EAAQyB,EAAW7E,EAAE,GAAIe,EAAE,IACjC,OAAc,IAAVqC,EAAoBA,EACjBpD,EAAE,GAAKe,EAAE,MAEb+D,EAAehD,KAAI,SAACiD,GAAD,OAAQA,EAAG,MA8CpBC,CAAWxD,EA3DhC,SAAuB4B,EAAOF,GAC1B,MAAiB,SAAVE,EACD,SAACpD,EAAGe,GAAJ,OAAUkC,EAAqBjD,EAAGe,EAAGmC,IACrC,SAAClD,EAAGe,GAAJ,OAAWkC,EAAqBjD,EAAGe,EAAGmC,IAwDL+B,CAAc7B,EAAOF,IAAUpB,KAAI,WAMIzG,GAAW,IALV0G,EAKS,EALTA,QACAvG,EAIS,EAJTA,MACAmF,EAGS,EAHTA,UACAC,EAES,EAFTA,OACAqB,EACS,EADTA,YAE9C,kCAA8B5G,GAC3C,OACI,kBAAC0I,EAAA,EAAD,CACImB,OAAK,EACLhB,IAAKnC,GAEL,kBAACkC,EAAA,EAAD,CAAWE,MAAM,UACJpC,EACT,yBAAKoD,IAAKlD,EAAYU,KAAMF,MAAO,CAAC6B,MAAO,GAAIc,WAAY,MAE/D,kBAACnB,EAAA,EAAD,CAAWE,MAAM,SAASlF,IAAQzD,GAAO2D,OAAO,QAChD,kBAAC8E,EAAA,EAAD,CAAWE,MAAM,SAASlF,IAAQ0B,GAAWxB,OAAO,QACpD,kBAAC8E,EAAA,EAAD,CAAWE,MAAM,SAASlF,IAAQ2B,GAAQzB,OAAO,cAM/C,IAArBqC,EAAUtB,QAAgB,sB,gDC5FxBmF,OApBf,YAA+B,IAAVzJ,EAAS,oBACtB0J,EAAYC,mBAClB,OACE,yBAAKxJ,UAAU,UACb,kBAACyJ,GAAA,EAAD,CACEC,YAAY,SACZtJ,GAAG,iBACH4C,MAAM,SACN2G,SAAUJ,IAEZ,kBAACK,GAAA,EAAD,CACEC,QAAQ,YACRC,UAAW,kBAAC,KAAD,MACX3J,MAAM,UACNJ,QAAS,kBAAMF,EAAME,QAAQwJ,EAAUQ,QAAQ5G,Y,0CC8SxC6G,OA5Rf,YAA0D,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,aAAcjI,EAAY,EAAZA,UAAY,EACnBC,mBAAS,IADU,mBAC9CsD,EAD8C,KACnC2E,EADmC,OAEvBjI,mBAAS,aAFc,mBAE9C6D,EAF8C,KAErCqE,EAFqC,OAGflI,mBAAS,IAHM,mBAG9C+D,EAH8C,KAGjCoE,EAHiC,OAInBnI,mBAAS,IAJU,mBAI9CoI,EAJ8C,KAInCC,EAJmC,OAKnBrI,mBAAS,CAACgE,IAAK,SAAUsE,KAAM,UALZ,mBAK9CC,EAL8C,KAKnCC,EALmC,OAMvBxI,mBAAS,GANc,mBAM9CyI,GAN8C,KAMrCC,GANqC,QAOnB1I,mBAAS,SAPU,qBAO9CV,GAP8C,MAOnCqJ,GAPmC,SAQb3I,mBAAS,IARI,qBAQ9C4I,GAR8C,MAQhCC,GARgC,SASf7I,mBAAS,GATM,qBAS9C8I,GAT8C,MASjCC,GATiC,SAY3B/I,mBAAS,QAZkB,qBAY9CkF,GAZ8C,MAYvC8D,GAZuC,SAavBC,IAAMjJ,SAAS,SAbQ,qBAa9CgF,GAb8C,MAarCkE,GAbqC,SAeflJ,mBAAS,IAfM,qBAiB/CmJ,IAjB+C,YAiBvCC,aAAe,CACzBC,QAAS,CACLjI,KAAMrB,MAId8B,qBAAU,WACN3D,EAAa,sCACRY,MAAK,SAACO,GACH8I,EAAe9I,QAExB,IAEHwC,qBAAU,YACgB,uCAAG,sBAAAC,EAAA,sEACf5D,EAAa,4CACdY,MAAK,SAACO,GACH,IAAIiK,EAAmBjK,EACV,UAAT0I,IACAuB,EAAmBjK,EAAKuE,KAAI,SAACC,GAAD,mBAAC,eACtBA,GADqB,IAExBA,QAASc,EAAWd,EAAQA,SAAWc,EAAWd,EAAQA,SAAWA,EAAQA,cAKrF,IAAMP,EAAYgG,EAAiB1F,KAAI,SAACC,GAAD,MAAc,CACjD0F,KAAM1F,EAAQA,QACd7C,MAAO6C,EAAQE,YAAYyF,SAEzBC,EAAa9G,EAAS2G,GAC5BjB,EAAaoB,GACbZ,GAAgBS,GAChBrB,EAAa3E,MAnBA,2CAAH,qDAsBtBoG,KACD,IAEH,IAAMC,GAAe,uCAAG,WAAOnD,GAAP,iBAAA1E,EAAA,sDACd8H,EAAcpD,EAAMqD,OAAO7I,MACjCkH,EAAW0B,GACXE,QAAQC,IAAIH,GACNzL,EACc,cAAhByL,EACM,qCADN,mDAEkDA,GAEtD1L,EAAaC,GACRW,MAAK,SAACO,GACH6I,EAAW0B,GACXzB,EAAe9I,GACK,cAAhBuK,EACApB,EAAa,CAACnJ,EAAK0E,YAAYC,IAAK3E,EAAK0E,YAAYE,OAErDuE,EAAa,EAAG,GAEpBE,GAAW,MAlBC,2CAAH,sDAgCrBoB,QAAQC,IAAI,eAAgBhG,GAmB5B+F,QAAQC,IAAIhC,GAEZ,IAT4BiC,GAetBC,GAAYC,aAAW,CACzBC,WAAY,CACRnM,MAAO,UACP,YAAa,CACTA,MAAO,WAEX,qBAAsB,CAClBkE,gBAAiB,YAGzBkI,QAAS,GACTC,MAAO,IAXOH,CAYfI,KAuDH,OArDkBJ,cAAW,SAACf,GAAD,MAAY,CACrCoB,KAAM,CACFnE,MAAO,GACPb,OAAQ,GACRW,QAAS,EACTsE,OAAQrB,EAAMsB,QAAQ,IAE1BN,WAAY,CACRjE,QAAS,EACT,YAAa,CACTwE,UAAW,mBACX1M,MAAOmL,EAAME,QAAQsB,OAAOC,MAC5B,aAAc,CACV1I,gBAAiB,UACjB2I,QAAS,EACTC,OAAQ,SAGhB,wBAAyB,CACrB9M,MAAO,UACP8M,OAAQ,mBAGhBC,MAAO,CACH3E,MAAO,GACPb,OAAQ,IAEZ8E,MAAO,CACHW,aAAc,GACdF,OAAO,aAAD,OAAe3B,EAAME,QAAQ4B,KAAK,MACxC/I,gBAAiBiH,EAAME,QAAQ4B,KAAK,IACpCJ,QAAS,EACTK,WAAY/B,EAAMgC,YAAYC,OAAO,CAAC,mBAAoB,YAE9DhB,QAAS,GACTiB,aAAc,MAnCAnB,EAoCd,YAA0B,IAAxBoB,EAAuB,EAAvBA,QAAY5N,EAAW,2BACzB,OACI,kBAAC4M,EAAA,EAAD,eACIiB,sBAAuBD,EAAQD,aAC/BG,eAAa,EACbF,QAAS,CACLf,KAAMe,EAAQf,KACdJ,WAAYmB,EAAQnB,WACpBY,MAAOO,EAAQP,MACfV,MAAOiB,EAAQjB,MACfD,QAASkB,EAAQlB,UAEjB1M,OAMZ,kBAAC+N,GAAA,EAAD,CAAetC,MAAOA,IAClB,yBAAKtL,UAAS,OACV,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eACX,kBAACE,EAAA,EAAD,CAAYC,MAAM,cAAc0J,QAAQ,MAAK,kBAAC,IAAD,CAAkBzJ,GAAG,cAClE,kBAACyN,EAAA,EAAD,CACIC,QAAS,kBAAC1B,GAAD,CAAWG,QAAuB,SAAdrK,EAAsB6L,SAAU,kBA7G7E5D,EADc,UAAdjI,EACa,OAEA,cAEjBgJ,GAAe3E,KAAKyH,WA0GoBtC,KAAK,aACzB1I,MACI,kBAAC9C,EAAA,EAAD,CAAYC,MAAM,eACd,kBAAC,IAAD,CAAkBC,GAAG,gBAKjC,kBAAC6N,EAAA,EAAD,CAAYC,KAAG,EAAC/K,MAAO+G,EAAM6D,SA9F9B,SAAApF,GACfsB,EAAUtB,EAAMqD,OAAO7I,SA8FH,kBAAC0K,EAAA,EAAD,CAAkB1K,MAAM,KAAK2K,QAAS,kBAACK,EAAA,EAAD,CAAOhO,MAAM,YAAa6C,MAC5D,kBAACoL,EAAA,EAAD,CAAKjO,MAAqB,SAAd+B,EAAuB,OAAS,QAA5C,MACF/B,MAAM,QACR,kBAAC0N,EAAA,EAAD,CAAkB1K,MAAM,QAAQ2K,QAAS,kBAACK,EAAA,EAAD,CAAOhO,MAAM,YAAa6C,MAC/D,kBAACoL,EAAA,EAAD,CAAKjO,MAAqB,SAAd+B,EAAuB,OAAS,QAA5C,gBACF/B,MAAM,eAEZ,kBAACkO,EAAA,EAAD,CAAarO,UAAU,iBACnB,kBAACsO,EAAA,EAAD,CACIzE,QAAQ,WACR1G,MAAO6C,EACP+H,SAAUjC,IAEV,kBAACyC,EAAA,EAAD,CAAUpL,MAAM,aACZ,kBAAC,IAAD,CAAkB/C,GAAG,eAExBqF,EAAUM,KAAI,SAACC,GAAD,OACX,kBAACuI,EAAA,EAAD,CAAUpL,MAAO6C,EAAQ7C,OAAQ6C,EAAQ0F,YAKzD,kBAACxL,EAAA,EAAD,CAAYC,MAAM,cAAc0J,QAAQ,MAAK,kBAAC,IAAD,CAAkBzJ,GAAG,cAClE,yBAAKJ,UAAU,cACX,kBAAC,EAAD,CACIR,MAAO,kBAAC,IAAD,CAAkBY,GAAG,UAC5BR,OAAsB,UAAd6B,GACR9B,OAAK,EACLI,QAAS,SAACyO,GAAD,OAAO1D,GAAa,UAC7BrL,MAAOwF,EAAgBiB,EAAYuI,YACnC/O,MAAOyF,EAAYe,EAAYzG,OAC/BH,MAAO,IAEX,kBAAC,EAAD,CACIE,MAAO,kBAAC,IAAD,CAAkBY,GAAG,cAC5BR,OAAsB,cAAd6B,GACR1B,QAAS,SAACyO,GAAD,OAAO1D,GAAa,cAC7BrL,MAAOwF,EAAgBiB,EAAYwI,gBACnChP,MAAOyF,EAAYe,EAAYtB,WAC/BtF,MAAO,IAEX,kBAAC,EAAD,CACIE,MAAO,kBAAC,IAAD,CAAkBY,GAAG,WAC5BT,OAAK,EACLC,OAAsB,WAAd6B,GACR1B,QAAS,SAACyO,GAAD,OAAO1D,GAAa,WAC7BrL,MAAOwF,EAAgBiB,EAAYyI,aACnCjP,MAAOyF,EAAYe,EAAYrB,QAC/BvF,MAAO,KAGf,kBAAC,EAAD,CACI6I,IAAK8C,GACL/I,UAAWA,EACXT,UAAWA,GACXgE,UAAWsF,GACXrF,OAAQgF,EACR/E,KAAMiF,MAGd,kBAAC9K,EAAA,EAAD,CAAME,UAAU,cACZ,kBAACC,EAAA,EAAD,KACI,yBAAKyG,MAAO,CAACnE,QAAS,SAClB,wBAAImE,MAAO,CAACkI,KAAM,IAAKC,aAAc,OAAQtM,QAAS,OAAQuM,WAAY,WACtE,kBAAC,IAAD,CAAkB1O,GAAG,gBAEzB,kBAAC,GAAD,CAAQL,QAAS,SAACoD,GAAD,OA/KrB,SAACA,GACjB,IAAMmC,EAAS,GACfyF,GAAagE,SAAQ,SAAAC,GACbA,EAAKhJ,QAAQiJ,cAAcC,SAAS/L,EAAM8L,gBAC1C3J,EAAOtD,KAAKgN,MAGpBxE,EAAalF,GAwKmC6J,CAAYhM,OAG5C,kBAAC,GAAD,CAASsC,UAAW8E,EAAWlD,MAAOA,GAAOF,QAASA,GAC7CG,cAhKH,SAACqB,EAAOD,GAE9ByC,GADchE,KAAYuB,GAAsB,QAAVrB,GACrB,OAAS,OAC1BgE,GAAW3C,OA+JC,wBAAIhC,MAAO,CAAC0I,YAAa,SACrB,kBAAC,IAAD,CAAkBhP,GAAG,aACH2D,OAAQ,CACJtC,UAAW,kBAAC,IAAD,CAAkBrB,IA9K3C+L,GA8KmE1K,GA7KpF0K,GAAIkD,OAAO,GAAGC,cAAgBnD,GAAI5G,MAAM,UAgLnC,kBAAC,EAAD,CAAWvF,UAAW,aAAcyB,UAAWA,GAAWS,UAAWA,QC9SrEqN,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCHSC,GAfJ,CACPC,SAAU,mBACVC,UAAW,YACXC,SAAU,WACVC,MAAO,QACPC,cAAe,YACfC,UAAW,YACXC,OAAQ,SACRC,MAAO,QACPC,WAAY,0BACZC,QAAS,UACTC,WAAY,cACZC,SAAU,YACVC,cAAe,mBCEJC,GAfD,CACVb,SAAU,8BACVC,UAAW,eACXC,SAAU,eACVC,MAAO,qBACPC,cAAe,2BACfC,UAAW,qBACXC,OAAQ,qBACRC,MAAO,eACPC,WAAY,wCACZC,QAAS,eACTC,WAAY,2BACZC,SAAU,2BACVC,cAAe,wCCJbE,GAAO,WAAO,IAIZC,EAJW,EACazO,mBAAS0O,UAAUC,UADhC,mBACRC,EADQ,KACA9G,EADA,OAEmB9H,mBAAS,SAF5B,mBAERD,EAFQ,KAEGiI,EAFH,KAaf,OALIyG,EADAG,EAAO7B,SAAS,MACL8B,GAEApB,GAIX,kBAAC,KAAD,CAAcmB,OAAQA,EACR5I,IAAK4I,EACLE,cAAc,KACdL,SAAUA,GAEpB,yBAAKxQ,GAAG,QAAQJ,UAAS,iBAAYkC,IACjC,kBAAC,GAAD,CAAK+H,UAAWA,EAAWC,KAAM6G,EAAQ5G,aAAcA,EAAcjI,UAAWA,OAOhGgP,IAASC,OACL,kBAAC,GAAD,MACAC,SAASC,eAAe,SH6FtB,kBAAmBR,WACrBA,UAAUS,cAAcC,MACrBtQ,MAAK,SAAAuQ,GACJA,EAAaC,gBAEdpQ,OAAM,SAAAqQ,GACLzF,QAAQyF,MAAMA,EAAMC,c","file":"static/js/main.0d59ce2b.chunk.js","sourcesContent":["import React from \"react\";\nimport {Card, CardContent, Typography} from \"@material-ui/core\";\nimport \"./InfoBox.scss\";\nimport {FormattedMessage} from \"react-intl\";\n\n\nconst activeClass = (index) => {\n    return index === 1?\"infoBox--red\":index === 2?\"infoBox--green\":\"infoBox--black\"\n}\n\nfunction InfoBox({title, cases, isRed, total, active, index, ...props}) {\n    return (\n        <Card onClick={props.onClick} className={`infoBox \n                        ${active && activeClass(index)}`\n        }>\n            <CardContent>\n                <Typography color=\"textSecondary\">\n                    {title}\n                </Typography>\n                <h2 className={`infoBox__cases ${index === 1 ? `red` : index === 2 ? `green` : null}`}>\n                    {total}\n                </h2>\n                <Typography className=\"infoBox__total\" color=\"textSecondary\">\n                    +{cases} <FormattedMessage id=\"IncreaseToday\"/>\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default InfoBox;\n","\nexport const fetchRequest = (url, method, params = '', withAuth = false) => {\n    return new Promise(function (resolve, reject) {\n        let fetchInitData = {\n            method: method,\n        }\n        if (params !== '') {\n            fetchInitData.body = JSON.stringify(params);\n        }\n        fetch(url, fetchInitData)\n            .then((response) => response.json())\n            .then((responseData) => {\n                resolve(responseData)\n            })\n            .catch((err) => {\n                reject(err);\n            });\n    })\n}\n","import React, {useState, useEffect} from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport {fetchRequest} from \"../../lib/Service\";\n\nconst buildChartData = (data, casesType) => {\n    let chartData = [];\n    let lastDataPoint;\n    for (let date in data.cases) {\n        if (lastDataPoint) {\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n};\n\nfunction LineGraph({themeType, casesType = \"cases\", ...props}) {\n    const [data, setData] = useState({});\n    const options = {\n        legend: {\n            display: false,\n        },\n        elements: {\n            point: {\n                radius: 0,\n            },\n        },\n\n        maintainAspectRatio: false,\n        tooltips: {\n            mode: \"index\",\n            intersect: false,\n            callbacks: {\n                label: function (tooltipItem, data) {\n                    return numeral(tooltipItem.value).format(\"+0,0\");\n                },\n            },\n        },\n        scales: {\n            xAxes: [\n                {\n                    type: \"time\",\n                    time: {\n                        format: \"MM/DD/YY\",\n                        tooltipFormat: \"ll\",\n                    },\n                    ticks: {\n                        fontColor: themeType === \"dark\" ? \"#fff\" : \"#000\",\n                    },\n                },\n            ],\n            yAxes: [\n                {\n                    gridLines: {\n                        display: false,\n                    },\n                    ticks: {\n                        fontColor: themeType === \"dark\" ? \"#fff\" : \"#000\",\n                        // Include a dollar sign in the ticks\n                        callback: function (value, index, values) {\n                            return numeral(value).format(\"0a\");\n                        },\n                    },\n                },\n            ],\n        },\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await fetchRequest(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n                .then((data) => {\n                    let chartData = buildChartData(data, casesType);\n                    setData(chartData);\n                });\n        };\n\n        fetchData();\n    }, [casesType]);\n\n    return (\n        <div className={props.className}>\n            {data?.length > 0 && (\n                <Line\n                    options={options}\n                    data={{\n                        datasets: [\n                            {\n                                backgroundColor: casesType === 'cases'?'rgba(204, 16, 52, .4)':casesType==='recovered'?'rgba(125, 215, 29, .4)':'rgba(0, 0, 0, .4)',\n                                borderColor: casesType === 'cases'?'rgb(204, 16, 52)':casesType==='recovered'?'rgb(125, 215, 29)':'rgb(0, 0, 0)',\n                                data: data,\n                            },\n                        ],\n                    }}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default LineGraph;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport {Circle, Popup} from \"react-leaflet\";\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#CC1034\",\n        rgb: \"rgb(204, 16, 52)\",\n        half_op: \"rgba(204, 16, 52, 0.5)\",\n        multiplier: 800,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        rgb: \"rgb(125, 215, 29)\",\n        half_op: \"rgba(125, 215, 29, 0.5)\",\n        multiplier: 1200,\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        rgb: \"rgb(251, 68, 67)\",\n        half_op: \"rgba(251, 68, 67, 0.5)\",\n        multiplier: 2000,\n    },\n};\n\nexport const sortData = (data) => {\n    const sortedData = [...data]\n    return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1))\n}\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n    data.map((country) => (\n        <Circle\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            color={casesTypeColors[casesType].hex}\n            fillColor={casesTypeColors[casesType].hex}\n            fillOpacity={0.4}\n            radius={\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n            }\n        >\n            <Popup>\n                <div className=\"info-container\">\n                    <div\n                        className=\"info-flag\"\n                        style={{backgroundImage: `url(${country.countryInfo.flag})`}}\n                    ></div>\n                    <div className=\"info-name\">{country.country}</div>\n                    <div className=\"info-confirmed\">\n                        Cases: {numeral(country.cases).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-recovered\">\n                        Recovered: {numeral(country.recovered).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-deaths\">\n                        Deaths: {numeral(country.deaths).format(\"0,0\")}\n                    </div>\n                </div>\n            </Popup>\n        </Circle>\n    ));\n\nexport const prettyPrintStat = (stat) => stat ? `${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const toThousands = num => {\n    var num = (num || 0).toString(), result = '';\n    while (num.length > 3) {\n        result = ',' + num.slice(-3) + result;\n        num = num.slice(0, num.length - 3);\n    }\n    if (num) {\n        result = num + result;\n    }\n    return result;\n}\n","import React, { useState, useEffect, shouldComponentUpdate } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport { showDataOnMap } from '../../utils/util'\nimport \"./Map.scss\"\n\nfunction MapJS({themeType, countries, casesType, center, zoom}) {\n    return (\n        <div className=\"map\">\n            <Map center={center} zoom={zoom}>\n                <TileLayer\n                url={themeType === 'dark'? 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png':'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'}\n                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\">\n                \n                </TileLayer>\n                {showDataOnMap(countries, casesType)}\n            </Map>\n        </div>\n    )\n}\n\nexport default MapJS\n","export const coutryName = {\n    \"Afghanistan\": \"阿富汗\",\n    \"Aland Islands\": \"奧蘭群島\",\n    \"Albania\": \"阿爾巴尼亞\",\n    \"Algeria\": \"阿爾及利亞\",\n    \"American Samoa\": \"美屬薩摩亞\",\n    \"Andorra\": \"安道爾\",\n    \"Angola\": \"安哥拉\",\n    \"Anguilla\": \"安圭拉\",\n    \"Antigua and Barbuda\": \"安地卡及巴布達\",\n    \"Argentina\": \"阿根廷\",\n    \"Armenia\": \"亞美尼亞\",\n    \"Aruba\": \"阿魯巴\",\n    \"Australia\": \"澳大利亞\",\n    \"Austria\": \"奧地利\",\n    \"Azerbaijan\": \"亞塞拜然\",\n    \"Bangladesh\": \"孟加拉\",\n    \"Bahrain\": \"巴林\",\n    \"Bahamas\": \"巴哈馬\",\n    \"Barbados\": \"巴貝多\",\n    \"Belarus\": \"白俄羅斯\",\n    \"Belgium\": \"比利時\",\n    \"Belize\": \"貝里斯\",\n    \"Benin\": \"貝南\",\n    \"Bermuda\": \"百慕大\",\n    \"Bhutan\": \"不丹\",\n    \"Bolivia\": \"玻利維亞\",\n    \"Bosnia and Herzegovina\": \"波斯尼亞和黑塞哥維那\",\n    \"Botswana\": \"波札那\",\n    \"Bouvet Island\": \"布維島\",\n    \"Brazil\": \"巴西\",\n    \"Brunei\": \"汶萊\",\n    \"Bulgaria\": \"保加利亞\",\n    \"Burkina Faso\": \"布吉納法索\",\n    \"Burundi\": \"蒲隆地\",\n    \"Cambodia\": \"柬埔寨\",\n    \"Cameroon\": \"喀麥隆\",\n    \"Canada\": \"加拿大\",\n    \"Cape Verde\": \"維德角\",\n    \"Central African Republic\": \"中非\",\n    \"Chad\": \"查德\",\n    \"Chile\": \"智利\",\n    \"Christmas Islands\": \"聖誕島\",\n    \"Cocos (keeling) Islands\": \"科科斯（基林）群島\",\n    \"Colombia\": \"哥倫比亞\",\n    \"Comoros\": \"葛摩\",\n    \"Congo (Congo-Kinshasa)\": \"剛果（金）\",\n    \"Congo\": \"剛果\",\n    \"Cook Islands\": \"庫克群島\",\n    \"Costa Rica\": \"哥斯大黎加\",\n    \"Cote D’Ivoire\": \"象牙海岸\",\n    \"China\": \"中國\",\n    \"Croatia\": \"克羅埃西亞\",\n    \"Cuba\": \"古巴\",\n    \"Czech\": \"捷克\",\n    \"Cyprus\": \"塞普勒斯\",\n    \"Denmark\": \"丹麥\",\n    \"Djibouti\": \"吉布提\",\n    \"Dominica\": \"多明尼加\",\n    \"East Timor\": \"東帝汶\",\n    \"Ecuador\": \"厄瓜多\",\n    \"Egypt\": \"埃及\",\n    \"Equatorial Guinea\": \"赤道幾內亞\",\n    \"Eritrea\": \"厄利垂亞\",\n    \"Estonia\": \"愛沙尼亞\",\n    \"Ethiopia\": \"衣索比亞\",\n    \"Faroe Islands\": \"法羅群島\",\n    \"Fiji\": \"斐濟\",\n    \"Finland\": \"芬蘭\",\n    \"France\": \"法國\",\n    \"Franch Metropolitan\": \"法國大都會\",\n    \"Franch Guiana\": \"法屬蓋亞那\",\n    \"French Polynesia\": \"法屬波利尼西亞\",\n    \"Gabon\": \"加彭\",\n    \"Gambia\": \"甘比亞\",\n    \"Georgia\": \"喬治亞\",\n    \"Germany\": \"德國\",\n    \"Ghana\": \"迦納\",\n    \"Gibraltar\": \"直布羅陀\",\n    \"Greece\": \"希臘\",\n    \"Grenada\": \"格瑞那達\",\n    \"Guadeloupe\": \"瓜德羅普島\",\n    \"Guam\": \"關島\",\n    \"Guatemala\": \"瓜地馬拉\",\n    \"Guernsey\": \"根西島\",\n    \"Guinea-Bissau\": \"幾內亞比索\",\n    \"Guinea\": \"幾內亞\",\n    \"Guyana\": \"蓋亞那\",\n    \"Hong Kong\": \"香港 （中國）\",\n    \"Haiti\": \"海地\",\n    \"Honduras\": \"宏都拉斯\",\n    \"Hungary\": \"匈牙利\",\n    \"Iceland\": \"冰島\",\n    \"India\": \"印度\",\n    \"Indonesia\": \"印度尼西亞\",\n    \"Iran\": \"伊朗\",\n    \"Iraq\": \"伊拉克\",\n    \"Ireland\": \"愛爾蘭\",\n    \"Isle of Man\": \"馬恩島\",\n    \"Israel\": \"以色列\",\n    \"Italy\": \"義大利\",\n    \"Jamaica\": \"牙買加\",\n    \"Japan\": \"日本\",\n    \"Jersey\": \"澤西島\",\n    \"Jordan\": \"約旦\",\n    \"Kazakhstan\": \"哈薩克\",\n    \"Kenya\": \"肯亞\",\n    \"Kiribati\": \"吉里巴斯\",\n    \"Korea (South)\": \"韓國\",\n    \"Korea (North)\": \"朝鮮\",\n    \"Kuwait\": \"科威特\",\n    \"Kyrgyzstan\": \"吉爾吉斯斯坦\",\n    \"Laos\": \"寮國\",\n    \"Latvia\": \"拉脫維亞\",\n    \"Lebanon\": \"黎巴嫩\",\n    \"Lesotho\": \"賴索托\",\n    \"Liberia\": \"賴比瑞亞\",\n    \"Libya\": \"利比亞\",\n    \"Liechtenstein\": \"列支敦斯登\",\n    \"Lithuania\": \"立陶宛\",\n    \"Luxembourg\": \"盧森堡\",\n    \"Macau\": \"澳門（中國）\",\n    \"Macedonia\": \"馬其頓\",\n    \"Malawi\": \"馬拉維\",\n    \"Malaysia\": \"馬來西亞\",\n    \"Madagascar\": \"馬達加斯加\",\n    \"Maldives\": \"馬爾地夫\",\n    \"Mali\": \"馬裡\",\n    \"Malta\": \"馬耳他\",\n    \"Marshall Islands\": \"馬紹爾群島\",\n    \"Martinique\": \"馬提尼克島\",\n    \"Mauritania\": \"茅利塔尼亞\",\n    \"Mauritius\": \"模里西斯\",\n    \"Mayotte\": \"馬約特\",\n    \"Mexico\": \"墨西哥\",\n    \"Micronesia\": \"密克羅尼西亞\",\n    \"Moldova\": \"摩爾多瓦\",\n    \"Monaco\": \"摩納哥\",\n    \"Mongolia\": \"蒙古\",\n    \"Montenegro\": \"黑山\",\n    \"Montserrat\": \"蒙特塞拉特\",\n    \"Morocco\": \"摩洛哥\",\n    \"Mozambique\": \"莫三比克\",\n    \"Myanmar\": \"緬甸\",\n    \"Namibia\": \"納米比亞\",\n    \"Nauru\": \"諾魯\",\n    \"Nepal\": \"尼泊爾\",\n    \"Netherlands\": \"荷蘭\",\n    \"New Caledonia\": \"新喀里多尼亞\",\n    \"New Zealand\": \"紐西蘭\",\n    \"Nicaragua\": \"尼加拉瓜\",\n    \"Niger\": \"尼日\",\n    \"Nigeria\": \"奈及利亞\",\n    \"Niue\": \"紐埃\",\n    \"Norfolk Island\": \"諾福克島\",\n    \"Norway\": \"挪威\",\n    \"Oman\": \"阿曼\",\n    \"Pakistan\": \"巴基斯坦\",\n    \"Palau\": \"帛琉\",\n    \"Palestine\": \"巴勒斯坦\",\n    \"Panama\": \"巴拿馬\",\n    \"Papua New Guinea\": \"巴布亞紐幾內亞\",\n    \"Paraguay\": \"巴拉圭\",\n    \"Peru\": \"祕魯\",\n    \"Philippines\": \"菲律賓\",\n    \"Pitcairn Islands\": \"皮特凱恩群島\",\n    \"Poland\": \"波蘭\",\n    \"Portugal\": \"葡萄牙\",\n    \"Puerto Rico\": \"波多黎各\",\n    \"Qatar\": \"卡達\",\n    \"Reunion\": \"留尼汪島\",\n    \"Romania\": \"羅馬尼亞\",\n    \"Rwanda\": \"盧安達\",\n    \"Russia\": \"俄羅斯\",\n    \"Saint Helena\": \"聖赫勒拿\",\n    \"Saint Kitts-Nevis\": \"聖克里斯多福及尼維斯\",\n    \"Saint Lucia\": \"聖露西亞\",\n    \"Saint Vincent and the Grenadines\": \"聖文森及格瑞那丁\",\n    \"El Salvador\": \"薩爾瓦多\",\n    \"Samoa\": \"薩摩亞\",\n    \"San Marino\": \"聖馬利諾\",\n    \"Sao Tome and Principe\": \"聖多美和普林西比\",\n    \"Saudi Arabia\": \"沙烏地阿拉伯\",\n    \"Senegal\": \"塞內加爾\",\n    \"Seychelles\": \"塞席爾\",\n    \"Sierra Leone\": \"獅子山\",\n    \"Singapore\": \"新加坡\",\n    \"Serbia\": \"塞爾維亞\",\n    \"Slovakia\": \"斯洛伐克\",\n    \"Slovenia\": \"斯洛維尼亞\",\n    \"Solomon Islands\": \"索羅門群島\",\n    \"Somalia\": \"索馬利亞\",\n    \"South Africa\": \"南非\",\n    \"Spain\": \"西班牙\",\n    \"Sri Lanka\": \"斯里蘭卡\",\n    \"Sudan\": \"蘇丹\",\n    \"Suriname\": \"蘇利南\",\n    \"Swaziland\": \"史瓦濟蘭\",\n    \"Sweden\": \"瑞典\",\n    \"Switzerland\": \"瑞士\",\n    \"Syria\": \"敘利亞\",\n    \"Tajikistan\": \"塔吉克\",\n    \"Tanzania\": \"坦尚尼亞\",\n    \"Taiwan\": \"臺灣\",\n    \"Thailand\": \"泰國\",\n    \"Trinidad and Tobago\": \"千里達及托巴哥\",\n    \"Timor-Leste\": \"東帝汶\",\n    \"Togo\": \"多哥\",\n    \"Tokelau\": \"托克勞\",\n    \"Tonga\": \"湯加\",\n    \"Tunisia\": \"突尼西亞\",\n    \"Turkey\": \"土耳其\",\n    \"Turkmenistan\": \"土庫曼\",\n    \"Tuvalu\": \"吐瓦魯\",\n    \"Uganda\": \"烏干達\",\n    \"Ukraine\": \"烏克蘭\",\n    \"United Arab Emirates\": \"阿拉伯聯合大公國\",\n    \"UK\": \"英國\",\n    \"USA\": \"美國\",\n    \"Uruguay\": \"烏拉圭\",\n    \"Uzbekistan\": \"烏茲別克\",\n    \"Vanuatu\": \"萬那杜\",\n    \"Vatican City\": \"梵蒂岡\",\n    \"Venezuela\": \"委內瑞拉\",\n    \"Vietnam\": \"越南\",\n    \"Wallis and Futuna\": \"瓦利斯群島和富圖納群島\",\n    \"Western Sahara\": \"西撒哈拉\",\n    \"Yemen\": \"葉門\",\n    \"Yugoslavia\": \"南斯拉夫\",\n    \"Zambia\": \"尚比亞\",\n    \"Zimbabwe\": \"辛巴威\",\n    \"Bosnia\": \"波士尼亞與赫塞哥維納\",\n    \"British Virgin Islands\": \"英屬維京群島\",\n    \"Cabo Verde\": \"維德角\",\n    \"Macao\": \"澳門\"\n}\n","import React from 'react'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport {coutryName} from \"../../lib/countryName\"\n\nimport Paper from '@material-ui/core/Paper';\nimport numeral from \"numeral\";\n\nimport './Table.scss'\nimport {FormattedMessage} from \"react-intl\";\n\nconst headCells = [\n    {id: 'country', numeric: false, disablePadding: true, label: <FormattedMessage id=\"Country\"/>},\n    {id: 'cases', numeric: true, disablePadding: false, label: <FormattedMessage id=\"Cases\"/>},\n    {id: 'recovered', numeric: true, disablePadding: false, label: <FormattedMessage id=\"Recovered\"/>},\n    {id: 'deaths', numeric: true, disablePadding: false, label: <FormattedMessage id=\"Deaths\"/>},\n];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst textLen = (str) => {\n    // const len = 12;\n    return str\n    // if (str.length >= 12) {\n    //     return str.substring(0, len) + '...';\n    // } else {\n    //     return str\n    // }\n}\n\n\nfunction TableJS({countries, sortData, order, onRequestSort, orderBy}) {\n\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableContainer component={Paper} style={{height: '400px'}}>\n            <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        {headCells.map((headCell) => (\n                            <TableCell\n                                key={headCell.id}\n                                align={headCell.numeric ? 'right' : 'center'}\n                                padding={headCell.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === headCell.id ? order : false}\n                                style={{width: headCell.id==='country'?'150px':'100px'}}\n                            >\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    // onClick={()=> sortData(headCell.id)}\n                                    onClick={createSortHandler(headCell.id)}\n                                >\n                                    {headCell.label}\n                                </TableSortLabel>\n                            </TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {stableSort(countries, getComparator(order, orderBy)).map(({\n                                                                                   country,\n                                                                                   cases,\n                                                                                   recovered,\n                                                                                   deaths,\n                                                                                   countryInfo\n                                                                               }, index) => {\n                        const labelId = `enhanced-table-checkbox-${index}`;\n                        return (\n                            <TableRow\n                                hover\n                                key={country}\n                            >\n                                <TableCell align=\"center\">\n                                    {textLen(country)}\n                                    <img src={countryInfo.flag} style={{width: 20, marginLeft: 5}}/>\n                                </TableCell>\n                                <TableCell align=\"right\">{numeral(cases).format(\"0,0\")}</TableCell>\n                                <TableCell align=\"right\">{numeral(recovered).format(\"0,0\")}</TableCell>\n                                <TableCell align=\"right\">{numeral(deaths).format(\"0,0\")}</TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n            {countries.length === 0 && 'Country not found'}\n        </TableContainer>\n    )\n}\n\nexport default TableJS\n","import React, { useRef } from \"react\";\nimport { Input, Button } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport \"./Search.scss\";\n\nfunction Search({ ...props }) {\n  const searchRef = useRef();\n  return (\n    <div className=\"search\">\n      <Input\n        placeholder=\"Search\"\n        id=\"standard-basic\"\n        label=\"Search\"\n        inputRef={searchRef}\n      />\n      <Button\n        variant=\"contained\"\n        startIcon={<SearchIcon />}\n        color=\"primary\"\n        onClick={() => props.onClick(searchRef.current.value)}\n      />\n    </div>\n  );\n}\n\nexport default Search;\n","import React, {useState, useEffect} from \"react\";\n\nimport {\n    Select,\n    MenuItem,\n    FormControl,\n    Card,\n    CardContent,\n    Typography,\n    Paper,\n    Switch,\n    Radio,\n    RadioGroup,\n    FormGroup,\n    FormControlLabel,\n    FormLabel,\n    Box\n} from \"@material-ui/core\";\n\nimport InfoBox from \"./InfoBox/InfoBox\";\nimport LineGraph from \"./LineGraph/LineGraph\";\nimport MapJS from \"./Map/Map\";\nimport TableJS from \"./Table/Table\";\nimport Search from \"./Search/Search\";\nimport {withStyles} from '@material-ui/core/styles';\nimport {\n    createMuiTheme,\n    makeStyles,\n    ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport {sortData, prettyPrintStat, toThousands} from \"../utils/util\";\nimport \"./App.scss\";\nimport \"leaflet/dist/leaflet.css\";\nimport {fetchRequest} from \"../lib/Service\"\nimport {coutryName} from \"../lib/countryName\"\nimport {FormattedMessage} from 'react-intl';\n\nfunction App({setLocale, lang, setThemeType, themeType}) {\n    const [countries, setCountries] = useState([]);\n    const [country, setCountry] = useState(\"Worldwide\");\n    const [countryInfo, setCountryInfo] = useState({});\n    const [tableData, setTableData] = useState([]);\n    const [mapCenter, setMapCenter] = useState({lat: 34.80746, lng: -40.4796});\n    const [mapZoom, setMapZoom] = useState(3);\n    const [casesType, setCasesType] = useState(\"cases\");\n    const [mapCountries, setMapCountries] = useState([]);\n    const [reRenderMap, setReRenderMap] = useState(1);\n\n    // table 排序\n    const [order, setOrder] = useState('desc');\n    const [orderBy, setOrderBy] = React.useState('cases');\n\n    const [searchValue, setSearchValue] = useState('');\n\n    const theme = createMuiTheme({\n        palette: {\n            type: themeType,\n        },\n    });\n\n    useEffect(() => {\n        fetchRequest(\"https://disease.sh/v3/covid-19/all\")\n            .then((data) => {\n                setCountryInfo(data);\n            });\n    }, []);\n\n    useEffect(() => {\n        const getCountriesData = async () => {\n            await fetchRequest(\"https://disease.sh/v3/covid-19/countries\")\n                .then((data) => {\n                    let coutriesNameLang = data;\n                    if (lang === 'zh-TW') {\n                        coutriesNameLang = data.map((country) => ({\n                            ...country,\n                            country: coutryName[country.country] ? coutryName[country.country] : country.country\n                        }));\n                    }\n\n\n                    const countries = coutriesNameLang.map((country) => ({\n                        name: country.country,\n                        value: country.countryInfo.iso2,\n                    }));\n                    const sortedData = sortData(coutriesNameLang);\n                    setTableData(sortedData);\n                    setMapCountries(coutriesNameLang);\n                    setCountries(countries);\n                });\n        };\n        getCountriesData();\n    }, []);\n\n    const onCounrtyChange = async (event) => {\n        const countryCode = event.target.value;\n        setCountry(countryCode);\n        console.log(countryCode);\n        const url =\n            countryCode === \"Worldwide\"\n                ? \"https://disease.sh/v3/covid-19/all\"\n                : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n        fetchRequest(url)\n            .then((data) => {\n                setCountry(countryCode);\n                setCountryInfo(data);\n                if (countryCode !== 'Worldwide') {\n                    setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n                } else {\n                    setMapCenter(0, 0)\n                }\n                setMapZoom(4);\n            });\n    };\n\n    const changeTheme = () => {\n        if (themeType === \"light\") {\n            setThemeType(\"dark\");\n        } else {\n            setThemeType(\"light\");\n        }\n        setReRenderMap(Math.random());\n    };\n\n\n    console.log(\"country info\", countryInfo);\n\n    const startSearch = (value) => {\n        const result = [];\n        mapCountries.forEach(item => {\n            if (item.country.toLowerCase().includes(value.toLowerCase())) {\n                result.push(item);\n            }\n        });\n        setTableData(result)\n    }\n\n    const capitalizeFirstWord = str => {\n        return str.charAt(0).toUpperCase() + str.slice(1)\n    }\n\n    const langChange = event => {\n        setLocale(event.target.value)\n    }\n    console.log(lang)\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const SwitchCus = withStyles({\n        switchBase: {\n            color: \"#5462b3\",\n            '&$checked': {\n                color: '#3f51b5',\n            },\n            '&$checked + $track': {\n                backgroundColor: '#3f51b5',\n            },\n        },\n        checked: {},\n        track: {},\n    })(Switch);\n\n    const IOSSwitch = withStyles((theme) => ({\n        root: {\n            width: 42,\n            height: 26,\n            padding: 0,\n            margin: theme.spacing(1),\n        },\n        switchBase: {\n            padding: 1,\n            '&$checked': {\n                transform: 'translateX(16px)',\n                color: theme.palette.common.white,\n                '& + $track': {\n                    backgroundColor: '#3f51b5',\n                    opacity: 1,\n                    border: 'none',\n                },\n            },\n            '&$focusVisible $thumb': {\n                color: '#3f51b5',\n                border: '6px solid #fff',\n            },\n        },\n        thumb: {\n            width: 24,\n            height: 24,\n        },\n        track: {\n            borderRadius: 26 / 2,\n            border: `1px solid ${theme.palette.grey[400]}`,\n            backgroundColor: theme.palette.grey[50],\n            opacity: 1,\n            transition: theme.transitions.create(['background-color', 'border']),\n        },\n        checked: {},\n        focusVisible: {},\n    }))(({classes, ...props}) => {\n        return (\n            <Switch\n                focusVisibleClassName={classes.focusVisible}\n                disableRipple\n                classes={{\n                    root: classes.root,\n                    switchBase: classes.switchBase,\n                    thumb: classes.thumb,\n                    track: classes.track,\n                    checked: classes.checked,\n                }}\n                {...props}\n            />\n        );\n    });\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={`app`}>\n                <div className=\"app__left\">\n                    <div className=\"app__header\">\n                        <Typography color=\"textPrimary\" variant=\"h4\"><FormattedMessage id=\"WebTitle\"/></Typography>\n                        <FormControlLabel\n                            control={<SwitchCus checked={themeType === \"dark\"} onChange={() => changeTheme()}\n                                                name=\"checkedB\"/>}\n                            label={\n                                <Typography color=\"textPrimary\">\n                                    <FormattedMessage id=\"DarkMode\"/>\n                                </Typography>\n                            }\n                        />\n\n                        <RadioGroup row value={lang} onChange={langChange}>\n                            <FormControlLabel value=\"en\" control={<Radio color=\"primary\"/>} label={\n                                <Box color={themeType === \"dark\" ? \"#fff\" : \"#000\"}>EN</Box>\n                            } color=\"red\"/>\n                            <FormControlLabel value=\"zh-TW\" control={<Radio color=\"primary\"/>} label={\n                                <Box color={themeType === \"dark\" ? \"#fff\" : \"#000\"}>中文</Box>\n                            } color=\"secondary\"/>\n                        </RadioGroup>\n                        <FormControl className=\"app__dropdown\">\n                            <Select\n                                variant=\"outlined\"\n                                value={country}\n                                onChange={onCounrtyChange}\n                            >\n                                <MenuItem value=\"Worldwide\">\n                                    <FormattedMessage id=\"Worldwide\"/>\n                                </MenuItem>\n                                {countries.map((country) => (\n                                    <MenuItem value={country.value}>{country.name}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <Typography color=\"textPrimary\" variant=\"h6\"><FormattedMessage id=\"Overview\"/></Typography>\n                    <div className=\"app__stats\">\n                        <InfoBox\n                            title={<FormattedMessage id=\"Cases\"/>}\n                            active={casesType === \"cases\"}\n                            isRed\n                            onClick={(e) => setCasesType(\"cases\")}\n                            cases={prettyPrintStat(countryInfo.todayCases)}\n                            total={toThousands(countryInfo.cases)}\n                            index={1}\n                        />\n                        <InfoBox\n                            title={<FormattedMessage id=\"Recovered\"/>}\n                            active={casesType === \"recovered\"}\n                            onClick={(e) => setCasesType(\"recovered\")}\n                            cases={prettyPrintStat(countryInfo.todayRecovered)}\n                            total={toThousands(countryInfo.recovered)}\n                            index={2}\n                        />\n                        <InfoBox\n                            title={<FormattedMessage id=\"Deaths\"/>}\n                            isRed\n                            active={casesType === \"deaths\"}\n                            onClick={(e) => setCasesType(\"deaths\")}\n                            cases={prettyPrintStat(countryInfo.todayDeaths)}\n                            total={toThousands(countryInfo.deaths)}\n                            index={3}\n                        />\n                    </div>\n                    <MapJS\n                        key={reRenderMap}\n                        themeType={themeType}\n                        casesType={casesType}\n                        countries={mapCountries}\n                        center={mapCenter}\n                        zoom={mapZoom}\n                    />\n                </div>\n                <Card className=\"app__right\">\n                    <CardContent>\n                        <div style={{display: 'flex'}}>\n                            <h3 style={{flex: '1', paddingRight: '10px', display: 'flex', alignItems: 'center'}}>\n                                <FormattedMessage id=\"AllCountry\"/>\n                            </h3>\n                            <Search onClick={(value) => startSearch(value)}/>\n                        </div>\n                        {/* Hint: Click on a country for more info */}\n                        <TableJS countries={tableData} order={order} orderBy={orderBy}\n                                 onRequestSort={handleRequestSort}/>\n                    </CardContent>\n                    <h3 style={{paddingLeft: '10px'}}>\n                        <FormattedMessage id=\"WorldTrend\"\n                                          values={{\n                                              casesType: <FormattedMessage id={capitalizeFirstWord(casesType)}/>\n                                          }}/>\n                    </h3>\n                    <LineGraph className={'app__graph'} casesType={casesType} themeType={themeType}/>\n                </Card>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const en = {\n    WebTitle: \"COVID-19 Tracker\",\n    Worldwide: \"Worldwide\",\n    Overview: \"Overview\",\n    Cases: \"Cases\",\n    IncreaseToday: \"New Cases\",\n    Recovered: \"Recovered\",\n    Deaths: \"Deaths\",\n    Total: \"Total\",\n    WorldTrend: \"World {casesType} trend\",\n    Country: \"Country\",\n    AllCountry: \"All Country\",\n    DarkMode: \"Dark Mode\",\n    DarkModeClose: \"Dark Mode Close\",\n};\nexport default en;\n","const zh_TW = {\n    WebTitle: \"COVID-19 追蹤站\",\n    Worldwide: \"全球\",\n    Overview: \"總覽\",\n    Cases: \"確診數\",\n    IncreaseToday: \"今日新增\",\n    Recovered: \"治癒數\",\n    Deaths: \"死亡數\",\n    Total: \"總計\",\n    WorldTrend: \"全球 {casesType} 趨勢\",\n    Country: \"國家\",\n    AllCountry: \"全部國家\",\n    DarkMode: \"深色模式\",\n    DarkModeClose: \"深色模式關閉\",\n};\nexport default zh_TW;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {IntlProvider} from 'react-intl'\n\nimport en from './i18n/en.js';\nimport zh from './i18n/zh.js';\n\nconst Root = () => {\n    const [locale, setLocale] = useState(navigator.language);\n    const [themeType, setThemeType] = useState(\"light\");\n\n    let messages;\n\n// 根據使用者選擇的語系 locale 切換使用不同的 messages\n    if (locale.includes('zh')) {\n        messages = zh;\n    } else {\n        messages = en;\n    }\n\n    return (\n        <IntlProvider locale={locale}\n                      key={locale}\n                      defaultLocale=\"en\"\n                      messages={messages}\n        >\n            <div id=\"theme\" className={`theme__${themeType}`}>\n                <App setLocale={setLocale} lang={locale} setThemeType={setThemeType} themeType={themeType}/>\n            </div>\n        </IntlProvider>\n\n    );\n};\n\nReactDOM.render(\n    <Root/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}